https://docs.google.com/document/d/1TeSpx0si3cECBwiTmh_sisEdmUmGpzdKwbpaQeAWSWw/edit
Вариант 3
Программа обязательно должна иметь CLI (опционально дополнительное использование GUI).
Более подробно тут: http://se.moevm.info/doku.php/courses:programming:rules_extra_kurs
Программа должна реализовывать весь следующий функционал по обработке bmp-файла
Общие сведения
24 бита на цвет
без сжатия
файл может не соответствовать формату BMP, т.е. необходимо проверка на BMP формат (дополнительно стоит помнить, что версий у формата несколько).
Если файл не соответствует формату BMP или его версии, то программа должна завершиться с соответствующей ошибкой.
обратите внимание на выравнивание; мусорные данные, если их необходимо дописать в файл для выравнивания, должны быть нулями.
обратите внимание на порядок записи пикселей
все поля стандартных BMP заголовков в выходном файле должны иметь те же значения что и во входном 
(разумеется кроме тех, которые должны быть изменены).
Программа должна иметь следующую функции по обработке изображений:

(1) Рисование прямоугольника. Флаг для выполнения данной операции: `--rect`. Он определяется:
Координатами левого верхнего угла. Флаг `--left_up`, значение задаётся в формате `left.up`, где left – координата по x, up – координата по y
Координатами правого нижнего угла.  Флаг `--right_down`, значение задаётся в формате `right.down`, где right – координата по x, down – координата по y
Толщиной линий. Флаг `--thickness`. На вход принимает число больше 0
Цветом линий. Флаг `--color` (цвет задаётся строкой `rrr.ggg.bbb`, где rrr/ggg/bbb – числа, задающие цветовую компоненту. пример `--color 255.0.0`
задаёт красный цвет)
Прямоугольник может быть залит или нет. Флаг `--fill`. Работает как бинарное значение: флага нет – false , флаг есть – true.
цветом которым он залит, если пользователем выбран залитый. Флаг `--fill_color` (работает аналогично флагу `--color`)
(2) Сделать рамку в виде узора. Флаг для выполнения данной операции: `--ornament`. Рамка определяется:
Узором. Флаг `--pattern`. Обязательные значения: rectangle и circle,  semicircles. Также можно добавить свои узоры (красивый узор можно получить
используя фракталы). Подробнее здесь: https://se.moevm.info/doku.php/courses:programming:cw_spring_ornament
Цветом. Флаг `--color` (цвет задаётся строкой `rrr.ggg.bbb`, где rrr/ggg/bbb – числа, задающие цветовую компоненту.
 пример `--color 255.0.0` задаёт красный цвет)
Шириной. Флаг `--thickness`. На вход принимает число больше 0
Количеством. Флаг `--count`. На вход принимает число больше 0
При необходимости можно добавить дополнительные флаги для необозначенных узоров
(3) Поворот изображения (части) на 90/180/270 градусов. Флаг для выполнения данной операции: `--rotate`. Функционал определяется
Координатами левого верхнего угла области. Флаг `--left_up`, значение задаётся в формате `left.up`, 
где left – координата по x, up – координата по y
Координатами правого нижнего угла области.  Флаг `--right_down`,
 значение задаётся в формате `right.down`, где right – координата по x, down – координата по y
Углом поворота. Флаг `--angle`, возможные значения: `90`, `180`, `270`

Все подзадачи, ввод/вывод должны быть реализованы в виде отдельной функции. 
